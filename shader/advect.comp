#version 460
layout(local_size_x = 1, local_size_y = 1) in;
layout(binding = 0) uniform sampler2D inVelocitySampler;
layout(binding = 1, rgba32f) uniform image2D outVelocityImage;

vec2 toUV(vec2 value)
{
    return (value + vec2(0.5)) / (vec2(gl_NumWorkGroups) * vec2(gl_WorkGroupSize));
}

void main()
{
    vec2 uv = toUV(gl_GlobalInvocationID.xy);
    vec2 velocity = texture(inVelocitySampler, uv).xy;
    float dt = 20.0;
    vec2 offset = -velocity * dt;
    velocity = texture(inVelocitySampler, toUV(gl_GlobalInvocationID.xy + offset)).xy;
    imageStore(outVelocityImage, ivec2(gl_GlobalInvocationID.xy), vec4(velocity, 0, 1));
}